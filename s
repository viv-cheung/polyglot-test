"# Aperçu\n---\r\nsidebar_label: Paiement\r\n---\r\n\r\nLe modal de paiement permet aux développeurs de faciliter les paiements en cryptomonnaie. Test 123\r\n\r\n<div class=\"text--center\">\r\n  <img src=\"/img/kit/checkout-modal.png\" />\r\n</div>\n\n# Intégration\nPour intégrer la fonctionnalité de paiement, suivez ces étapes:\r\n1. Installez le module `kit-checkout`:\r\n\r\n```bash\r\nnpm install @0xsequence/kit-checkout\n\n# ou\npnpm install @0xsequence/kit-checkout\n\n# ou\nyarn add @0xsequence/kit-checkout\r\n```\r\n\r\n2. Placez le KitCheckoutProvider en dessous du fournisseur de base de Kit Sequence dans votre application:\r\n\r\n```jsx\r\nimport { KitCheckoutProvider } from '@0xsequence/kit-checkout'\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <WagmiConfig config={config}>\r\n      <QueryClientProvider client={queryClient}> \r\n        <KitProvider>\r\n          <KitCheckoutProvider>\r\n            <Page />\r\n          </KitCheckoutProvider>\r\n        </KitProvider>\r\n      </QueryClientProvider>\r\n    </WagmiConfig>\r\n  )\r\n}\r\n```\n\n## Ouvrir le modal de paiement\nUtilisez le crochet `useCheckoutModal` pour ouvrir le modal de paiement et transmettez un objet de paramètres:\r\n\r\n```jsx\r\n  import { useCheckoutModal } from '@0xsequence/kit-checkout'\r\n\r\n\r\n  const MyComponent = () => {\r\n    const { triggerCheckout } = useCheckoutModal()\r\n  \r\n    const onClick = () => {\r\n      const checkoutSettings = {...}\r\n      triggerCheckout(checkoutSettings)\r\n    }\r\n\r\n    return (\r\n      <button onClick={onClick}>paiement</button>\r\n    )\r\n  }\r\n```\n\n## Configuration du modal de paiement\nConfigurez le modal de paiement en utilisant l'objet `checkoutSettings`:\r\n\r\n```jsx\r\nconst checkoutSettings = {\r\n  cryptoCheckout: {...},\r\n  orderSummaryItems: {...}\r\n}\r\n```\n\n### Configuration du paiement en cryptomonnaie (`cryptoCheckout`)\nLe champ `cryptoCheckout` spécifie les paramètres pour payer avec des cryptomonnaies, par exemple, interagir avec un contrat de création ou un contrat de marché.\r\n\r\nExemple de configuration:\r\n\r\n```jsx\r\nconst checkoutConfig = {\r\n  // ...\r\n  cryptoCheckout: {\r\n    chainId: 137,\r\n    triggerTransaction: async () => { console.log('transaction déclenchée') },\r\n    coinQuantity: {\r\n      contractAddress: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n      amountRequiredRaw: '10000000000'\r\n    },\r\n  },\r\n}\r\n```\n\n### Configuration du résumé de commande (`orderSummaryItems`)\nLe champ `orderSummaryItems` spécifie la liste des objets de collection affichés dans le résumé de commande.\r\n\r\nExemple de configuration:\r\n\r\n```jsx\r\n    orderSummaryItems: [\r\n      {\r\n        contractAddress: '0x631998e91476da5b870d741192fc5cbc55f5a52e',\r\n        tokenId: '66597',\r\n        quantityRaw: '100'\r\n      },\r\n    ]\r\n```"